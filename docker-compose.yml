version: "3.9"

services:

  eureka-server:
    build:
      context: eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "9922:9922"

  rabbitmq:
    build:
      context: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"

  config-server:
    build:
      context: config-server
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=native,docker
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    depends_on:
      eureka-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./config-server/src/main/resources/config:/app/config
    ports:
      - "9988:9988"

  cook-service:
    build:
      context: cook-service
    restart: always
    deploy:
      replicas: 2
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "cook-service"
    ports:
      - "4000:4000"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
#      - '--alertmanager.url=http://alertmanager:9093'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    links:
      - prometheus:prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"

volumes:
  prometheus_data: {}
  grafana_data: {}
